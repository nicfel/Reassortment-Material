<beast version="2.0"
       namespace="beast.core
                 :beast.core.util
                 :beast.core.parameter
                 :beast.evolution.alignment
                 :beast.evolution.likelihood
                 :beast.evolution.tree
                 :beast.evolution.tree.coalescent
                 :beast.evolution.sitemodel
                 :beast.evolution.substitutionmodel
                 :beast.evolution.operators
                 :beast.math.distributions
                 :feast.simulation
                 :feast.fileio
                 :coalre.network
                 :coalre.statistics
                 :coalre.simulator
                 :coalre.distribution
                 :coalre.operators">

    insert_alignment


    <map name="Uniform" >beast.math.distributions.Uniform</map>
    <map name="Exponential" >beast.math.distributions.Exponential</map>
    <map name="LogNormal" >beast.math.distributions.LogNormalDistributionModel</map>
    <map name="Normal" >beast.math.distributions.Normal</map>
    <map name="Beta" >beast.math.distributions.Beta</map>
    <map name="Gamma" >beast.math.distributions.Gamma</map>
    <map name="LaplaceDistribution" >beast.math.distributions.LaplaceDistribution</map>
    <map name="prior" >beast.math.distributions.Prior</map>
    <map name="InverseGamma" >beast.math.distributions.InverseGamma</map>
    <map name="OneOnX" >beast.math.distributions.OneOnX</map>


    <taxonset id="taxonSet" spec="TaxonSet">
      insert_taxa
    </taxonset>
    <trait spec="TraitSet" traitname="date-forward" id="traitSet">
      insert_sampling_times
        <taxa idref="taxonSet"/>
    </trait>

    insert_run_header



        <state>
          insert_seg_tree_state

            <stateNode id="network" spec="SimulatedCoalescentNetwork"
                       nSegments="insert_nr_segments" enableSegmentTreeUpdate="false">

                <traitSet idref="traitSet"/>

                <populationModel id="popModel" spec="ConstantPopulation">
                  <parameter id="popSize.init" name="popSize">2</parameter>
                </populationModel>
                <parameter id="reassortmentRate.init" name="reassortmentRate">0.1</parameter>
            </stateNode>
            <parameter id="reassortmentRate" name="stateNode">0.1</parameter>
            <parameter id="clockRate.c" name="stateNode" lower="0.0015">0.0036</parameter>
            <parameter id="popSize.t" name="stateNode">2</parameter>
            insert_parameters
        </state>

        <init spec="SegmentTreeInitializer" network="@network">
          insert_seg_tree
        </init>

        <distribution id="posterior" spec="CompoundDistribution">
            <distribution id="likelihood" spec="CompoundDistribution">
              insert_tree_likelihood
            </distribution>

            <distribution id="prior" spec="CompoundDistribution">
                <distribution id="networkPrior" spec="CoalescentWithReassortment">
                    <networkIntervals spec="NetworkIntervals" network="@network"/>
                    <populationModel spec="ConstantPopulation">
                        <popSize idref="popSize.t"/>
                    </populationModel>
                    <reassortmentRate idref="reassortmentRate"/>
                </distribution>
                <prior id="ClockPrior.c" name="distribution" x="@clockRate.c">
                  <OneOnX id="Uniform.0" name="distr"/>
                </prior>

                insert_priors

                <prior id="PopSizePrior" name="distribution" x="@popSize.t">
                  <LogNormal id="LogNormalDistributionModel.PopSize" name="distr" M="0" S="4"/>
                </prior>

                <prior id="ReassortmentRatePrior" name="distribution" x="@reassortmentRate">
                  <LogNormal id="LogNormalDistributionModel.reassortmentRate" meanInRealSpace="true" name="distr" M="0.1" S="4"/>
                </prior>


            </distribution>
        </distribution>




        <operator id="ReassortmentRateScaler" spec="ScaleOperator" parameter="@reassortmentRate" scaleFactor="0.5" weight="3"/>
        <operator id="NeScaler" spec="ScaleOperator" parameter="@popSize.t" scaleFactor="0.5" weight="3"/>

        insert_operators


        <operator id="FixMeanMutationRatesOperator" spec="DeltaExchangeOperator" delta="0.75" weight="3.0">
          insert_mut_par
          <weightvector id="weightparameter" spec="parameter.IntegerParameter" dimension="4" estimate="false">
            insert_weights
          </weightvector>
        </operator>

        <operator id="upDownOperator" spec="NetworkScaleOperator" network="@network" weight="5.0">
            insert_seg_tree
            <upParameter idref="popSize.t"/>
            <downParameter idref="clockRate.c"/>
            <downParameter idref="reassortmentRate"/>
        </operator>


        <operator id="clockRatescaler" spec="ScaleOperator" parameter="@clockRate.c" scaleFactor="0.75" weight="3"/>

        <operator spec="AddRemoveReassortment" network="@network" alpha="1.0" weight="100.0">
          insert_seg_tree
        </operator>

      	<operator spec="DivertSegmentOperator" network="@network" weight="5.0">
          insert_seg_tree
        </operator>

      	<operator spec="UniformNetworkNodeHeightOperator" network="@network" weight="5.0">
          insert_seg_tree
        </operator>

        <operator id="NetworkScale" spec="NetworkScaleOperator" network="@network" weight="3.0">
          insert_seg_tree
        </operator>

        <operator id="NetworkScaleRootOnly" spec="NetworkScaleOperator" network="@network" scaleRootOnly="true" weight="3.0">
          insert_seg_tree
        </operator>

      	<operator spec="NetworkExchange" network="@network" isNarrow="false" weight="10.0">
          insert_seg_tree
        </operator>

      	<operator spec="NetworkExchange" network="@network" isNarrow="true" weight="10.0">
          insert_seg_tree
        </operator>

      	<operator spec="SubNetworkSlide" network="@network" weight="30.0">
          insert_seg_tree
        </operator>

        <operator id="GibbsOperatorAboveSegmentRoots" spec="GibbsOperatorAboveSegmentRoots" network="@network" weight="3.0">
          insert_seg_tree
          <populationModel idref="popModel"/>
          <reassortmentRate idref="reassortmentRate"/>
        </operator>


        <logger spec="Logger" logEvery="50000" mode="tree" fileName="$(filebase).network.trees">
            <log idref="network"/>
        </logger>

        insert_seg_logger


        <logger spec="Logger" logEvery="50000" fileName="$(filebase).log">
            <log idref="posterior"/>
            <log idref="likelihood"/>
            <log idref="networkPrior"/>
            <log spec="NetworkStatsLogger" network="@network"/>
            <log spec="NetworkStatsLogger" network="@network">
              insert_seg_tree
            </log>
            <log idref="popSize.t"/>
            <log idref="reassortmentRate"/>
            insert_stats_log
            <log idref="clockRate.c"/>
            insert_param_log
        </logger>

        <logger id="screenlog" spec="Logger" logEvery="10000">
            <log idref="posterior"/>
            <log idref="likelihood"/>
            <log idref="prior"/>
            <log spec="NetworkStatsLogger" network="@network"/>
            <log spec="ESS" arg="@posterior"/>
        </logger>

    </run>
</beast>
